extends layout
block append styles
    link(rel='stylesheet', href='/stylesheets/highlight_default.css')
block append scripts
    script.

        // convert source to marked, require 'marked'
        function convert() {
            getPreviewer().innerHTML = marked(editor.getValue());
        }
        // get the previewer element
        function getPreviewer(index) {
            return document.getElementById("previewer");
        }
        // locate the size
        function locate() {
            var clientHeight = document.documentElement.clientHeight;
            var clientWidth = document.documentElement.clientWidth;
            var halfWidth = (clientWidth - 100) / 2;
            document.getElementById("editor").setAttribute("style", "width:" + halfWidth + "px;height:" + (clientHeight - 90) + "px")
            document.getElementById("previewer").setAttribute("style", "width:" + halfWidth + "px" + ";left:" + (halfWidth + 40) + "px;height:" + (clientHeight - 90) + "px");
            document.getElementById("main").setAttribute("style", "height:" + (clientHeight - 50) + "px");
        }
        // code highlight, require 'highlight'
        function code_highlight(code, lang, callback) {
            if (hljs.getLanguage(lang)) {
                return hljs.highlight(lang, code).value;
            }

            //console.log(lang);
            //console.log(code);
            //console.log(callback);
            //console.log(hljs.highlight(lang, code, false, true).value);
            //return code;
        }
block head
    div.head Editor

block body
    div.main#main
        pre#editor
        div#previewer
        //- script
        script(src='/javascripts/marked.js')
        script(src='/javascripts/highlight.pack.js')
        script(src='/javascripts/ace.js')
        script(src='/javascripts/ace_mode_markdown.js')
        script.
            /* locate */
            locate();
            document.body.onresize = locate;
            /* marked */
            marked.setOptions({
                highlight: code_highlight
            });
            /* editor */
            var editor = ace.edit("editor");
            editor.session.setMode("ace/mode/markdown")// set markdown mode
            editor.setFontSize(15); // set font-size
            editor.renderer.setShowGutter(false); // disable the line-numbers
            editor.renderer.setPadding(10); // set padding=10
            editor.session.setUseWrapMode(true); // use wrap mode, force warp line
            //editor.setTheme("ace/theme/twilight");
            editor.setShowPrintMargin(false); // disable the print-margin
            //editor.setShowLineNumbers(false);
            editor.setShowFoldWidgets(false); // disable fold wigets
            //editor.setShowInvisibles(true); // show invisible characters
            editor.scrollToLine(0); // scroll to top
            editor.$blockScrolling = Infinity; // disable warning message
            editor.on('change', function (e) {
                console.log('changed');
                convert();
                localStorage.setItem('editor', editor.getValue());
            });

            editor.on('scroll', function () {
                console.log('scroll');
            });
            //
            if (localStorage.getItem('editor')) {
                if (localStorage.hasOwnProperty('editor')) {
                    editor.setValue(localStorage.getItem('editor'));
                }
            }
block foot
    //-clear foot